# p = 0.5, so there is no significant difference between using the neg. bin. and the Poisson***
# I looked at all 12 comparisons and for all of them, p = 0.5 suggesting there is no significant dif between neg. bin. and Poisson
# Plot residuals of all full models
# None of these models have patterns in the residuals,
# suggesting the models are appropriate
op <- par(mfrow = c(2,2))
plot(coral_cc_yr_site)
plot(coral_sc_yr_site)
plot(coral_r_yr_site)
plot(sponge_cc_yr_site)
plot(sponge_sc_yr_site)
plot(sponge_r_yr_site)
plot(fish_cc_yr_site)
plot(fish_sc_yr_site)
plot(fish_r_yr_site)
plot(combined_cc_yr_site)
plot(combined_sc_yr_site)
plot(combined_r_yr_site)
par(op)
# ***Following notes in this section from before
#pchisq(2 * (logLik(coral_cc_yr_site) - logLik(coral_cc_yr_site_pn)), df = 1, lower.tail = FALSE)
# 'log Lik.' 1 (df=10)
# Below are the results in the example at https://stats.idre.ucla.edu/r/dae/negative-binomial-regression/
# However, I don't understand how they got 926.03...
# ## 'log Lik.' 2.157e-203 (df=5)
# In this example the associated chi-squared value estimated from 2*(logLik(m1) â€“ logLik(m3)) is 926.03 with one degree of freedom.
# This strongly suggests the negative binomial model, estimating the dispersion parameter, is more appropriate than the Poisson model.
########################################################################
# ## Figures of basic relationships between surrogates (x) and targets (y)
#
# # Figure 1. Relationship between coral cover and coral richness.
basic_coral_cc <- ggplot(data = variables, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Coral Cover (%)") +
scale_y_continuous(name = "Coral Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
#
# # Figure 2. Relationship between coral cover and sponge richness.
basic_sponge_cc <- ggplot(data = variables, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Coral Cover (%)") +
scale_y_continuous(name = "Sponge Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# # Resulting warning message just lets you know that there are years and sites for which these data are unavailable.
# # This does not change the resulting plot except that it will have fewer points than similar plots.
#
# # Figure 3. Relationship between coral cover and fish richness.
basic_fish_cc <- ggplot(data = variables, aes(x = Percent_Coral_Cover, y = Fish_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Coral Cover (%)") +
scale_y_continuous(name = "Fish Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
#
# # Figure 4. Relationship between coral cover and combined richness.
basic_combined_cc <- ggplot(data = variables, aes(x = Percent_Coral_Cover, y = Combined_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Coral Cover (%)") +
scale_y_continuous(name = "Combined Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# # Resulting warning message similar to that from figure 2.
# # Combined richness was only calculated for sites and years when richness was recorded for all 3 groups.
#
# # Figure 5. Relationship between sponge cover and coral richness.
basic_coral_sc <- ggplot(data = variables, aes(x = Percent_Sponge_Cover, y = Coral_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Sponge Cover (%)") +
scale_y_continuous(name = "Coral Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# # Figure 6. Relationship between sponge cover and sponge richness.
basic_sponge_sc <- ggplot(data = variables, aes(x = Percent_Sponge_Cover, y = Sponge_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Sponge Cover (%)") +
scale_y_continuous(name = "Sponge Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# # Resulting warning message same as that from figure 2.
#
# # Figure 7. Relationship between sponge cover and fish richness.
basic_fish_sc <- ggplot(data = variables, aes(x = Percent_Sponge_Cover, y = Fish_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Sponge Cover (%)") +
scale_y_continuous(name = "Fish Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
#
# # Figure 8. Relationship between sponge cover and combined richness.
basic_combined_sc <- ggplot(data = variables, aes(x = Percent_Sponge_Cover, y = Combined_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Sponge Cover (%)") +
scale_y_continuous(name = "Combined Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# # Resulting warning message same as that from figure 4.
#
# # Figure 9. Relationship between rugosity and coral richness.
basic_coral_r <- ggplot(data = variables, aes(x = Rugosity, y = Coral_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Rugosity") +
scale_y_continuous(name = "Coral Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
#
# # Figure 10. Relationship between rugosity and sponge richness.
basic_sponge_r <- ggplot(data = variables, aes(x = Rugosity, y = Sponge_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Rugosity") +
scale_y_continuous(name = "Sponge Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# # Resulting warning message same as that from figure 2.
#
# # Figure 11. Relationship between rugosity and fish richness.
basic_fish_r <- ggplot(data = variables, aes(x = Rugosity, y = Fish_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Rugosity") +
scale_y_continuous(name = "Fish Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
#
# # Figure 12. Relationship between rugosity and combined richness.
basic_combined_r <- ggplot(data = variables, aes(x = Rugosity, y = Combined_Richness)) +
geom_point(size = 3) +
scale_x_continuous(name = "Rugosity") +
scale_y_continuous(name = "Combined Richness") +
theme(text = element_text(size = 27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# # Resulting warning message same as that from figure 4.
# Organize all of these figures into one window for objective 1
grid.arrange(basic_coral_cc, basic_coral_sc, basic_coral_r,
basic_sponge_cc, basic_sponge_sc, basic_sponge_r,
basic_fish_cc, basic_fish_sc, basic_fish_r,
basic_combined_cc, basic_combined_sc, basic_combined_r,
ncol = 3, nrow = 4)
grid.arrange(basic_coral_cc, basic_coral_sc, basic_coral_r,
basic_sponge_cc, basic_sponge_sc, basic_sponge_r,
basic_fish_cc, basic_fish_sc, basic_fish_r,
basic_combined_cc, basic_combined_sc, basic_combined_r,
ncol = 3, nrow = 4)
source('C:/Users/Nicole/Desktop/Graduate Thesis 3-29-18/Analysis/Negative_Binomial_Models.R', echo=TRUE)
grid.arrange(basic_coral_cc, basic_coral_sc, basic_coral_r,
basic_sponge_cc, basic_sponge_sc, basic_sponge_r,
basic_fish_cc, basic_fish_sc, basic_fish_r,
basic_combined_cc, basic_combined_sc, basic_combined_r,
ncol = 3, nrow = 4)
combined_cc_site
combined_cc_site$aic
combined_cc_site$k
combined_cc_site$terms
coral_yr
sponge_predictions <- data.frame(
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions <- cbind(sponge_predictions, predict(object = sponge_yr_site, newdata = sponge_predictions, type = "link", se.fit = TRUE))
sponge_predictions <- within(sponge_predictions, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = sponge_predictions, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
library(AICcmodavg)
# First used to make figures using function ggplot
library(ggplot2)
# First used for negative binomial modeling using function glm.nb
library(MASS)
# First used to make 3D model using function scatterplot3d
library(scatterplot3d)
# First used to fit >1 ggplot on same window using function grid.arrange
library(gridExtra)
sponge_predictions <- data.frame(
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions <- cbind(sponge_predictions, predict(object = sponge_yr_site, newdata = sponge_predictions, type = "link", se.fit = TRUE))
sponge_predictions <- within(sponge_predictions, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = sponge_predictions, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
fish_predictions <- data.frame(
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels =
levels(variables$Site)))
fish_predictions <- cbind(fish_predictions, predict(object = fish_site, newdata = fish_predictions, type = "link", se.fit = TRUE))
fish_predictions <- within(fish_predictions, {
Predicted_Fish_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = fish_predictions, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
View(fish_predictions)
fish_predictions_oneoftwo <- fish_predictions[which(fish_predictions$Site == "pelican", fish_predictions$Site == "white", fish_predictions$Site == "crab", fish_predictions$Site == "iguana"),]
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
fish_predictions$Site <- as.character(fish_predictions$Site)
fish_predictions_oneoftwo <- fish_predictions[fish_predictions$Site == "pelican" |
fish_predictions$Site == "white" |
fish_predictions$Site == "crab" |
fish_predictions$Site == "iguana", ]
fish_predictions_oneoftwo <- fish_predictions[fish_predictions$Site == "monkey" |
fish_predictions$Site == "bigelow" |
fish_predictions$Site == "grand" |
fish_predictions$Site == "muskN", ]
fish_predictions_oneoftwo$Site <- as.factor(fish_predictions_oneoftwo$Site)
fish_predictions_twooftwo$Site <- as.factor(fish_predictions_twooftwo$Site)
fish_predictions$Site <- as.factor(fish_predictions$Site)
#Same as figure 37, but with 4 sites each
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
fish_predictions$Site <- as.character(fish_predictions$Site)
fish_predictions_oneoftwo <- fish_predictions[fish_predictions$Site == "pelican" |
fish_predictions$Site == "white" |
fish_predictions$Site == "crab" |
fish_predictions$Site == "iguana", ]
fish_predictions_oneoftwo <- fish_predictions[fish_predictions$Site == "monkey" |
fish_predictions$Site == "bigelow" |
fish_predictions$Site == "grand" |
fish_predictions$Site == "muskN", ]
fish_predictions_oneoftwo$Site <- as.factor(fish_predictions_oneoftwo$Site)
fish_predictions_twooftwo$Site <- as.factor(fish_predictions_twooftwo$Site)
fish_predictions$Site <- as.factor(fish_predictions$Site)
#Same as figure 37, but with 4 sites each
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_twooftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
fish_predictions$Site <- as.character(fish_predictions$Site)
fish_predictions_oneoftwo <- fish_predictions[fish_predictions$Site == "pelican" |
fish_predictions$Site == "white" |
fish_predictions$Site == "crab" |
fish_predictions$Site == "iguana", ]
fish_predictions_twooftwo <- fish_predictions[fish_predictions$Site == "monkey" |
fish_predictions$Site == "bigelow" |
fish_predictions$Site == "grand" |
fish_predictions$Site == "muskN", ]
fish_predictions_oneoftwo$Site <- as.factor(fish_predictions_oneoftwo$Site)
fish_predictions_twooftwo$Site <- as.factor(fish_predictions_twooftwo$Site)
fish_predictions$Site <- as.factor(fish_predictions$Site)
#Same as figure 37, but with 4 sites each
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_twooftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_twooftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette[5:8]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_y_discrete(limits = c(0:35)) +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_y_comtinuous(limits = c(0:35)) +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_y_continuous(limits = c(0:35)) +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_y_continuous(limits = c(0, 35)) +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_twooftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_y_continuous(limits = c(0, 35)) +
scale_color_manual(values = cb_palette[5:8]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_oneoftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_y_continuous(limits = c(10, 35)) +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions_twooftwo, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_y_continuous(limits = c(10, 35)) +
scale_color_manual(values = cb_palette[5:8]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = fish_predictions, aes(x = Year, y = Predicted_Fish_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Fish Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_predictions, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
sponge_predictions$Site <- as.character(sponge_predictions$Site)
sponge_predictions_oneoftwo <- sponge_predictions[sponge_predictions$Site == "pelican" |
sponge_predictions$Site == "white" |
sponge_predictions$Site == "crab" |
sponge_predictions$Site == "bigelow", ]
sponge_predictions_twooftwo <- sponge_predictions[sponge_predictions$Site == "monkey" |
sponge_predictions$Site == "iguana" |
sponge_predictions$Site == "grand" |
sponge_predictions$Site == "muskN", ]
sponge_predictions_oneoftwo$Site <- as.factor(sponge_predictions_oneoftwo$Site)
sponge_predictions_twooftwo$Site <- as.factor(sponge_predictions_twooftwo$Site)
sponge_predictions$Site <- as.factor(sponge_predictions$Site)
#Same as figure 34, but with 4 sites each
ggplot(data = sponge_predictions_oneoftwo, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_y_continuous(limits = c(10, 35)) +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_predictions_twooftwo, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_y_continuous(limits = c(10, 35)) +
scale_color_manual(values = cb_palette[5:8]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
