panel.background = element_blank(),
axis.line = element_line(colour = "black"))
str(coral_predictions_2d)
# The function of this model is Sponge_Richness ~ Year + Site.
# Create new dataframe of predicted values from this model
sponge_predictions <- data.frame(
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions <- cbind(sponge_predictions, predict(object = sponge_yr_site, newdata = sponge_predictions, type = "link", se.fit = TRUE))
sponge_predictions <- within(sponge_predictions, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure 35. Predicted relationship between time and sponge richness by site. Negative binomial distribution used.
ggplot(data = sponge_predictions, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# Subset predictions by site
sponge_predictions$Site <- as.character(sponge_predictions$Site)
sponge_predictions_oneoftwo <- sponge_predictions[sponge_predictions$Site == "pelican" |
sponge_predictions$Site == "white" |
sponge_predictions$Site == "crab" |
sponge_predictions$Site == "bigelow", ]
sponge_predictions_twooftwo <- sponge_predictions[sponge_predictions$Site == "monkey" |
sponge_predictions$Site == "iguana" |
sponge_predictions$Site == "grand" |
sponge_predictions$Site == "muskN", ]
sponge_predictions_oneoftwo$Site <- as.factor(sponge_predictions_oneoftwo$Site)
sponge_predictions_twooftwo$Site <- as.factor(sponge_predictions_twooftwo$Site)
sponge_predictions$Site <- as.factor(sponge_predictions$Site)
#Same as figure 34, but with 4 sites each
predicted_sponge_yr_site_A <- ggplot(data = sponge_predictions_oneoftwo, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_y_continuous(limits = c(10, 35)) +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
predicted_sponge_yr_site_B <- ggplot(data = sponge_predictions_twooftwo, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_y_continuous(limits = c(10, 35)) +
scale_color_manual(values = cb_palette[5:8]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
grid.arrange(predicted_sponge_yr_site_A, predicted_sponge_yr_site_B, ncol = 2, nrow = 1)
# Figure 36. Relationship between time and sponge richness by site. Negative binomial distribution used.
ggplot(data = variables, aes(x = Year, y = Sponge_Richness)) +
geom_point(size = 3)+
scale_x_continuous(name = "Time (Year)") +
scale_y_continuous(name = "Sponge Richness") +
geom_smooth(size = 1.2, method = "glm.nb", formula = y ~ x, aes(color = Site)) +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size=27),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# ***# Predictions for sponge figures with coral cover and year and coral cover and site
# sponge_predictions_for_figure <- data.frame(
#   Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
#   Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
#   #****There's something wrong with the line above, because I need to be able to have year as a factor for these figures, but this makes it a numeric
#   Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
#                   levels(variables$Site)))
# sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
# sponge_predictions_for_figure <- within(sponge_predictions_for_figure, {
#   Predicted_Sponge_Richness <- exp(fit)
#   LL <- exp(fit - 1.96 * se.fit)
#   UL <- exp(fit + 1.96 * se.fit)
# })
# 7/12/2019
# Note that I created a new model for the sake of creating this figure
# Order the factor levels for year
sponge_cc_yr_asfactor_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = sponge_complete)
sponge_cc_yr_asfactor_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
sponge_cc_yr_asfactor_fig <- cbind(sponge_cc_yr_asfactor_fig, predict(object = sponge_cc_yr_asfactor_fig_model, newdata = sponge_cc_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_yr_asfactor_fig <- within(sponge_cc_yr_asfactor_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
str(sponge_complete)
str(variabels)
str(variables)
str(sponge_complete)
str(combined_complete)
sponge_cc_yr_asfactor_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = sponge_complete)
sponge_cc_yr_asfactor_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
sponge_cc_yr_asfactor_fig <- cbind(sponge_cc_yr_asfactor_fig, predict(object = sponge_cc_yr_asfactor_fig_model, newdata = sponge_cc_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_yr_asfactor_fig <- within(sponge_cc_yr_asfactor_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
sponge_complete
sponge_complete$Year_Factor <- factor(sponge_complete$Year_Factor, levels = c("1", "2", "3", "8", "9", "10", "11", "13", "14",
"15", "16", "17", "18", "19", "20", "21", "22",
"23", "24", "25", "26"), ordered = TRUE)
summary(sponge_complete$Year)
summary(sponge_complete$True_Year)
View(variables)
sponge_complete <- variables[complete.cases(variables$Sponge_Richness), ]
sponge_complete$Year_Factor <- factor(sponge_complete$Year_Factor, levels = c("1", "2", "3", "8", "9", "10", "11", "13", "14",
"15", "16", "17", "18", "19", "20", "21", "22",
"23", "24", "25", "26"), ordered = TRUE)
str(sponge_complete)
sponge_complete$Year_Factor_Ordered <- factor(sponge_complete$Year_Factor, levels = c("1", "2", "3", "8", "9", "10", "11", "13", "14",
"15", "16", "17", "18", "19", "20", "21", "22",
"23", "24", "25", "26"), ordered = TRUE)
sponge_cc_site_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Site, data = sponge_complete)
sponge_cc_site_fig_model
sponge_cc_yr_asfactor_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = sponge_complete)
sponge_cc_yr_asfactor_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
sponge_cc_yr_asfactor_fig <- cbind(sponge_cc_yr_asfactor_fig, predict(object = sponge_cc_yr_asfactor_fig_model, newdata = sponge_cc_yr_asfactor_fig,
type = "link", se.fit = TRUE))
sponge_cc_yr_asfactor_fig <- within(sponge_cc_yr_asfactor_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
str(sponge_cc_yr_asfactor_fig)
str(sponge_complete)
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
# scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                         "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
"16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
"16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
#scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
"16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
#scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
"16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = variables)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = variables)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels = levels(variables$Year_Factor)))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE))
predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE)
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.exclude))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = variables)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels = levels(variables$Year_Factor)))
View(stest)
stest$Year_Factor <- as.character(stest$Year_Factor)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
stest$Year_Factor <- as.factor(stest$Year_Factor)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
library(AICcmodavg)
# First used to make figures using function ggplot
library(ggplot2)
# First used for negative binomial modeling using function glm.nb
library(MASS)
# First used to make 3D model using function scatterplot3d
library(scatterplot3d)
# First used to fit >1 ggplot on same window using function grid.arrange
library(gridExtra)
stest$Year_Factor <- as.character(stest$Year_Factor)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
stest$Year_Factor <- as.factor(stest$Year_Factor)
View(stest)
stest$Year_Factor <- as.character(stest$Year_Factor)
str(stest)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
str(stest)
stest$Year_Factor <- as.factor(stest$Year_Factor)
str(stest)
levels(stest$Year_Factor)
str(sponge_complete)
str(variables)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels = levels(variables$Year_Factor)))
#&^&
stest$Year_Factor <- as.character(stest$Year_Factor)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
stest$Year_Factor <- as.factor(stest$Year_Factor)
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
# 95% confidence intervals
stest <- within(stest, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by year***
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# 7/12/2019
# Note that I created a new model for the sake of creating this figure
# Order the factor levels for year
sponge_cc_yr_asfactor_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = sponge_complete)
sponge_cc_yr_asfactor_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
sponge_cc_yr_asfactor_fig <- cbind(sponge_cc_yr_asfactor_fig, predict(object = sponge_cc_yr_asfactor_fig_model, newdata = sponge_cc_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_yr_asfactor_fig <- within(sponge_cc_yr_asfactor_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by year***
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# Note that I created a new model for the sake of creating this figure
sponge_cc_site_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Site, data = sponge_complete)
sponge_cc_site_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(sponge_complete$Site)))
sponge_cc_site_fig <- cbind(sponge_cc_site_fig, predict(object = sponge_cc_site_fig_model, newdata = sponge_cc_site_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_site_fig <- within(sponge_cc_site_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by site***
ggplot(data = sponge_cc_site_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Site)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Site") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# ***# Note that I created a new model for the sake of creating this figure
# sponge_cc_yr_asfactor_site_test <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = variables)
# sponge_predictions_2d_test <- data.frame(
#   Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 216),
#   Year_Factor = factor(rep(1:27, each = 800), levels = 1:27, labels = levels(variables$Year_Factor)),
#   Site = factor(rep(1:8, each = 2700), levels = 1:8, labels = levels(variables$Site)))
# sponge_predictions_2d_test <- cbind(sponge_predictions_2d_test, predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
#                                                                         type = "link", se.fit = TRUE, na.action = na.omit))
# #If newdata is omitted the predictions are based on the data used for the fit. In that case how cases with missing values in the original fit are handled is determined by the na.action argument of that fit. If na.action = na.omit omitted cases will not appear in the predictions, whereas if na.action = na.exclude they will appear (in predictions, standard errors or interval limits), with value NA.
########################################################################
#######################FISH RICHNESS####################################
## Figures of competitive models (<2.0 deltaAIC)
# The most parsimonious model for fish richness is fish_site.
# The function of this model is Fish_Richness ~ Site.
# Create new dataframe of predicted values from this model
fish_predictions <- data.frame(
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$True_Year_Factor)))
levels(sponge_complete$True_Year_Factor)
stest$True_Year_Factor <- as.character(stest$True_Year_Factor)
str(stest)
sponge_complete$True_Year_Factor <- as.character(sponge_complete$True_Year_Factor)
str(sponge_complete)
sponge_complete <- sponge_complete[sponge_complete$True_Year_Factor != "1992" | sponge_complete$True_Year_Factor != "1995" | sponge_complete$True_Year_Factor != "1996" |
sponge_complete$True_Year_Factor != "1997" | sponge_complete$True_Year_Factor != "1998" | sponge_complete$True_Year_Factor != "2003", ]
str(sponge_complete)
sponge_complete$True_Year_Factor <- as.factor(sponge_complete$True_Year_Factor)
str(sponge_complete)
sponge_complete$True_Year_Factor <- as.character(sponge_complete$True_Year_Factor)
sponge_complete <- sponge_complete[sponge_complete$True_Year_Factor != "1992" | sponge_complete$True_Year_Factor != "1995" | sponge_complete$True_Year_Factor != "1996" |
sponge_complete$True_Year_Factor != "1997" | sponge_complete$True_Year_Factor != "1998" | sponge_complete$True_Year_Factor != "2003", ]
sponge_complete$True_Year_Factor <- as.factor(sponge_complete$True_Year_Factor)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$True_Year_Factor)))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
stest <- within(stest, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = stest, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = sponge_complete, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
sponge_complete$True_Year_Factor <- as.character(sponge_complete$True_Year_Factor)
sponge_complete <- sponge_complete[sponge_complete$True_Year_Factor != "1992" | sponge_complete$True_Year_Factor != "1995" | sponge_complete$True_Year_Factor != "1996" |
sponge_complete$True_Year_Factor != "1997" | sponge_complete$True_Year_Factor != "1998" | sponge_complete$True_Year_Factor != "2003", ]
sponge_complete$True_Year_Factor <- as.factor(sponge_complete$True_Year_Factor)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$True_Year_Factor)))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
stest <- within(stest, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = stest, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = sponge_complete, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
combined_complete <- variables[complete.cases(variables$Combined_Richness), ]
str(combined_complete)
combined_complete$True_Year_Factor <- as.character(combined_complete$True_Year_Factor)
combined_complete <- combined_complete[combined_complete$True_Year_Factor != "1992" | combined_complete$True_Year_Factor != "1995" | combined_complete$True_Year_Factor != "1996" |
combined_complete$True_Year_Factor != "1997" | combined_complete$True_Year_Factor != "1998" | combined_complete$True_Year_Factor != "2003", ]
combined_complete <- variables[complete.cases(variables$Combined_Richness), ]
levels(combined_complete$True_Year)
levels(combined_complete$True_Year_Factor)
combined_complete$True_Year_Factor <- as.character(combined_complete$True_Year_Factor)
combined_complete <- combined_complete[combined_complete$True_Year_Factor != "1992" | combined_complete$True_Year_Factor != "1995" | combined_complete$True_Year_Factor != "1996" |
combined_complete$True_Year_Factor != "1997" | combined_complete$True_Year_Factor != "1998" | combined_complete$True_Year_Factor != "2003", ]
combined_complete$True_Year_Factor <- as.factor(combined_complete$True_Year_Factor)
str(combined_complete)
ctest_model <- glm.nb(formula = Combined_Richness ~ Rugosity + True_Year_Factor, data = sponge_complete)
ctest <- data.frame(
Rugosity = rep(seq(from = min(combined_complete$Rugosity), to = max(combined_complete$Rugosity), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(combined_complete$True_Year_Factor)))
ctest <- cbind(ctest, predict(object = ctest_model, newdata = ctest, type = "link", se.fit = TRUE, na.action = na.omit))
ctest <- within(ctest, {
Predicted_Combined_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = ctest, aes(x = Rugosity, y = Predicted_Combined_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = combined_complete, size = 3, aes(x = Rugosity, y = Combined_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Rugosity", y = "Combined Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
