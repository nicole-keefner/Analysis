theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
"16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
"16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
#scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
"16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
#scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
"16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = variables)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = variables)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels = levels(variables$Year_Factor)))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE))
predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE)
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.exclude))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = variables)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels = levels(variables$Year_Factor)))
View(stest)
stest$Year_Factor <- as.character(stest$Year_Factor)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
stest$Year_Factor <- as.factor(stest$Year_Factor)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
library(AICcmodavg)
# First used to make figures using function ggplot
library(ggplot2)
# First used for negative binomial modeling using function glm.nb
library(MASS)
# First used to make 3D model using function scatterplot3d
library(scatterplot3d)
# First used to fit >1 ggplot on same window using function grid.arrange
library(gridExtra)
stest$Year_Factor <- as.character(stest$Year_Factor)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
stest$Year_Factor <- as.factor(stest$Year_Factor)
View(stest)
stest$Year_Factor <- as.character(stest$Year_Factor)
str(stest)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
str(stest)
stest$Year_Factor <- as.factor(stest$Year_Factor)
str(stest)
levels(stest$Year_Factor)
str(sponge_complete)
str(variables)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels = levels(variables$Year_Factor)))
#&^&
stest$Year_Factor <- as.character(stest$Year_Factor)
stest <- stest[stest$Year_Factor != "0" | stest$Year_Factor != "4" | stest$Year_Factor != "5" |
stest$Year_Factor != "6" | stest$Year_Factor != "7" | stest$Year_Factor != "12", ]
stest$Year_Factor <- as.factor(stest$Year_Factor)
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
# 95% confidence intervals
stest <- within(stest, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by year***
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# 7/12/2019
# Note that I created a new model for the sake of creating this figure
# Order the factor levels for year
sponge_cc_yr_asfactor_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = sponge_complete)
sponge_cc_yr_asfactor_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
sponge_cc_yr_asfactor_fig <- cbind(sponge_cc_yr_asfactor_fig, predict(object = sponge_cc_yr_asfactor_fig_model, newdata = sponge_cc_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_yr_asfactor_fig <- within(sponge_cc_yr_asfactor_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by year***
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# Note that I created a new model for the sake of creating this figure
sponge_cc_site_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Site, data = sponge_complete)
sponge_cc_site_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(sponge_complete$Site)))
sponge_cc_site_fig <- cbind(sponge_cc_site_fig, predict(object = sponge_cc_site_fig_model, newdata = sponge_cc_site_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_site_fig <- within(sponge_cc_site_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by site***
ggplot(data = sponge_cc_site_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Site)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Site") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# ***# Note that I created a new model for the sake of creating this figure
# sponge_cc_yr_asfactor_site_test <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = variables)
# sponge_predictions_2d_test <- data.frame(
#   Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 216),
#   Year_Factor = factor(rep(1:27, each = 800), levels = 1:27, labels = levels(variables$Year_Factor)),
#   Site = factor(rep(1:8, each = 2700), levels = 1:8, labels = levels(variables$Site)))
# sponge_predictions_2d_test <- cbind(sponge_predictions_2d_test, predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
#                                                                         type = "link", se.fit = TRUE, na.action = na.omit))
# #If newdata is omitted the predictions are based on the data used for the fit. In that case how cases with missing values in the original fit are handled is determined by the na.action argument of that fit. If na.action = na.omit omitted cases will not appear in the predictions, whereas if na.action = na.exclude they will appear (in predictions, standard errors or interval limits), with value NA.
########################################################################
#######################FISH RICHNESS####################################
## Figures of competitive models (<2.0 deltaAIC)
# The most parsimonious model for fish richness is fish_site.
# The function of this model is Fish_Richness ~ Site.
# Create new dataframe of predicted values from this model
fish_predictions <- data.frame(
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$True_Year_Factor)))
levels(sponge_complete$True_Year_Factor)
stest$True_Year_Factor <- as.character(stest$True_Year_Factor)
str(stest)
sponge_complete$True_Year_Factor <- as.character(sponge_complete$True_Year_Factor)
str(sponge_complete)
sponge_complete <- sponge_complete[sponge_complete$True_Year_Factor != "1992" | sponge_complete$True_Year_Factor != "1995" | sponge_complete$True_Year_Factor != "1996" |
sponge_complete$True_Year_Factor != "1997" | sponge_complete$True_Year_Factor != "1998" | sponge_complete$True_Year_Factor != "2003", ]
str(sponge_complete)
sponge_complete$True_Year_Factor <- as.factor(sponge_complete$True_Year_Factor)
str(sponge_complete)
sponge_complete$True_Year_Factor <- as.character(sponge_complete$True_Year_Factor)
sponge_complete <- sponge_complete[sponge_complete$True_Year_Factor != "1992" | sponge_complete$True_Year_Factor != "1995" | sponge_complete$True_Year_Factor != "1996" |
sponge_complete$True_Year_Factor != "1997" | sponge_complete$True_Year_Factor != "1998" | sponge_complete$True_Year_Factor != "2003", ]
sponge_complete$True_Year_Factor <- as.factor(sponge_complete$True_Year_Factor)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$True_Year_Factor)))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
stest <- within(stest, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = stest, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = sponge_complete, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
sponge_complete$True_Year_Factor <- as.character(sponge_complete$True_Year_Factor)
sponge_complete <- sponge_complete[sponge_complete$True_Year_Factor != "1992" | sponge_complete$True_Year_Factor != "1995" | sponge_complete$True_Year_Factor != "1996" |
sponge_complete$True_Year_Factor != "1997" | sponge_complete$True_Year_Factor != "1998" | sponge_complete$True_Year_Factor != "2003", ]
sponge_complete$True_Year_Factor <- as.factor(sponge_complete$True_Year_Factor)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$True_Year_Factor)))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
stest <- within(stest, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = stest, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = sponge_complete, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
combined_complete <- variables[complete.cases(variables$Combined_Richness), ]
str(combined_complete)
combined_complete$True_Year_Factor <- as.character(combined_complete$True_Year_Factor)
combined_complete <- combined_complete[combined_complete$True_Year_Factor != "1992" | combined_complete$True_Year_Factor != "1995" | combined_complete$True_Year_Factor != "1996" |
combined_complete$True_Year_Factor != "1997" | combined_complete$True_Year_Factor != "1998" | combined_complete$True_Year_Factor != "2003", ]
combined_complete <- variables[complete.cases(variables$Combined_Richness), ]
levels(combined_complete$True_Year)
levels(combined_complete$True_Year_Factor)
combined_complete$True_Year_Factor <- as.character(combined_complete$True_Year_Factor)
combined_complete <- combined_complete[combined_complete$True_Year_Factor != "1992" | combined_complete$True_Year_Factor != "1995" | combined_complete$True_Year_Factor != "1996" |
combined_complete$True_Year_Factor != "1997" | combined_complete$True_Year_Factor != "1998" | combined_complete$True_Year_Factor != "2003", ]
combined_complete$True_Year_Factor <- as.factor(combined_complete$True_Year_Factor)
str(combined_complete)
ctest_model <- glm.nb(formula = Combined_Richness ~ Rugosity + True_Year_Factor, data = sponge_complete)
ctest <- data.frame(
Rugosity = rep(seq(from = min(combined_complete$Rugosity), to = max(combined_complete$Rugosity), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(combined_complete$True_Year_Factor)))
ctest <- cbind(ctest, predict(object = ctest_model, newdata = ctest, type = "link", se.fit = TRUE, na.action = na.omit))
ctest <- within(ctest, {
Predicted_Combined_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = ctest, aes(x = Rugosity, y = Predicted_Combined_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = combined_complete, size = 3, aes(x = Rugosity, y = Combined_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Rugosity", y = "Combined Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
combined_surrogate <- aictab(cand.set = list(combined_cc, combined_sc, combined_r), modnames = c("combined_cc", "combined_sc", "combined_r"), digits = 4)
# library(sjPlot)
# First used for aic function, aictab
library(AICcmodavg)
# First used to make figures using function ggplot
library(ggplot2)
# First used for negative binomial modeling using function glm.nb
library(MASS)
# First used to make 3D model using function scatterplot3d
library(scatterplot3d)
# First used to fit >1 ggplot on same window using function grid.arrange
library(gridExtra)
combined_surrogate <- aictab(cand.set = list(combined_cc, combined_sc, combined_r), modnames = c("combined_cc", "combined_sc", "combined_r"), digits = 4)
### Nicole Keefner
### Master's Thesis: Develop models and figures using variables.csv
## Use *** to search for errors in the code or areas that need more work
## Use END OF CLEANED CODE to search for the end of the updated/cleaned code. If not found, all code is cleaned.
## Set Working Directory
## Install packages
## Load packages
# # First used for model output in HTML table format using function tab_model***
# library(sjPlot)
# First used for aic function, aictab
library(AICcmodavg)
# First used to make figures using function ggplot
library(ggplot2)
# First used for negative binomial modeling using function glm.nb
library(MASS)
# First used to make 3D model using function scatterplot3d
library(scatterplot3d)
# First used to fit >1 ggplot on same window using function grid.arrange
library(gridExtra)
## Cite R software and packages used
# citation()
# citation(package = "AICcmodavg")
# citation(package = "ggplot2")
# citation(package = "MASS")
# citation(package = "scatterplot3d")
# citation(package = "gridExtra")
## Import variables.csv dataset
variables <- read.csv(file = "variables.csv", header = T)
# Note that year is treated as type integer and is therefore continuous
# 4 targets: richness of corals, sponges, fishes, and combined
# 3 surrogates: percent coral cover, percent sponge cover, rugosity
# Because there are NA's in the Sponge_Richness column, R will be unable to calculate summary values
# Create subset of data called "sponge_complete" that retains only complete cases for Sponge_Richness
sponge_complete <- variables[complete.cases(variables$Sponge_Richness), ]
#sponge_complete$Year_Factor <- as.factor(sponge_complete$Year)
sponge_complete$Year_Factor <- factor(sponge_complete$Year_Factor, levels = c("1", "2", "3", "8", "9", "10", "11", "13", "14",
"15", "16", "17", "18", "19", "20", "21", "22",
"23", "24", "25", "26"), ordered = TRUE)
# Create dataframe with means and SD's for all variables
avg_name <-c("Percent_Coral_Cover",
"Percent_Sponge_Cover",
"Rugosity",
"Coral_Richness",
"Sponge_Richness",
"Fish_Richness",
"Combined_Richness")
avg_mean <-c(round(x = mean(x = variables$Percent_Coral_Cover), digits = 3),
round(x = mean(x = variables$Percent_Sponge_Cover), digits = 3),
round(x = mean(x = sponge_complete$Rugosity), digits = 3),
round(x = mean(x = variables$Coral_Richness), digits = 3),
round(x = mean(x = variables$Sponge_Richness), digits = 3),
round(x = mean(x = variables$Fish_Richness), digits = 3),
round(x = mean(x = sponge_complete$Combined_Richness), digits = 3))
avg_sd <-c(round(x = sd(x = variables$Percent_Coral_Cover), digits = 3),
round(x = sd(x = variables$Percent_Sponge_Cover), digits = 3),
round(x = sd(x = sponge_complete$Rugosity), digits = 3),
round(x = sd(x = variables$Coral_Richness), digits = 3),
round(x = sd(x = variables$Sponge_Richness), digits = 3),
round(x = sd(x = variables$Fish_Richness), digits = 3),
round(x = sd(x = sponge_complete$Combined_Richness), digits = 3))
avg_df <- data.frame(avg_name, avg_mean, avg_sd)
# Graph frequency distributions of response variables
hist(x = variables$Percent_Coral_Cover, breaks = 25)
hist(x = variables$Percent_Sponge_Cover, breaks = 25)
hist(x = variables$Rugosity, breaks = 25)
hist(x = variables$Coral_Richness, breaks = 25)
hist(x = variables$Sponge_Richness, breaks = 25)
hist(x = variables$Fish_Richness, breaks = 25)
hist(x = variables$Combined_Richness, breaks = 25)
########################################################################
### Objective 1: Create models that only include terms for surrogates
### in order to determine which of the 3 candidate surrogates is the best at predicting each target.
# glm.nb produces warning messages because the data is often underdispersed relative to a negative binomial distribution.
# Poisson might be more appropriate. However, when the mean = variance the NB distribution will provide similar results as the Poisson.
# Negative binomial distribution is used to model count data with overdispersion; richness is count data.
# Negative binomial distribution models and aic tables for each target with one surrogate
# For model names: first word refers to the target, cc represents coral cover, sc represents sponge cover, r represents rugosity
# (e.g. coral_cc is a model with coral cover as the predictor for coral richness)
# For each target, compare models in aic table
coral_cc = glm.nb(formula = Coral_Richness ~ Percent_Coral_Cover, data = variables)
coral_sc = glm.nb(formula = Coral_Richness ~ Percent_Sponge_Cover, data = variables)
coral_r = glm.nb(formula = Coral_Richness ~ Rugosity, data = variables)
coral_surrogate <- aictab(cand.set = list(coral_cc, coral_sc, coral_r), modnames = c("coral_cc", "coral_sc", "coral_r"), digits = 4)
sponge_cc = glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover, data = variables)
sponge_sc = glm.nb(formula = Sponge_Richness ~ Percent_Sponge_Cover, data = variables)
sponge_r = glm.nb(formula = Sponge_Richness ~ Rugosity, data = variables)
sponge_surrogate <- aictab(cand.set = list(sponge_cc, sponge_sc, sponge_r), modnames = c("sponge_cc", "sponge_sc", "sponge_r"), digits = 4)
fish_cc = glm.nb(formula = Fish_Richness ~ Percent_Coral_Cover, data = variables)
fish_sc = glm.nb(formula = Fish_Richness ~ Percent_Sponge_Cover, data = variables)
fish_r = glm.nb(formula = Fish_Richness ~ Rugosity, data = variables)
fish_surrogate <- aictab(cand.set = list(fish_cc, fish_sc, fish_r), modnames = c("fish_cc", "fish_sc", "fish_r"), digits = 4)
combined_cc = glm.nb(formula = Combined_Richness ~ Percent_Coral_Cover, data = variables)
combined_sc = glm.nb(formula = Combined_Richness ~ Percent_Sponge_Cover, data = variables)
combined_r = glm.nb(formula = Combined_Richness ~ Rugosity, data = variables)
combined_surrogate <- aictab(cand.set = list(combined_cc, combined_sc, combined_r), modnames = c("combined_cc", "combined_sc", "combined_r"), digits = 4)
combined_surrogate
cc_modnames_surrogate_only <- c("cc", "cc_yr", "cc_site", "cc_yr_site", "cc_yr_yrxcc", "cc_site_sitexcc")
coral_cc_surrogate_only <- aictab(cand.set = list(coral_cc, coral_cc_yr, coral_cc_site, coral_cc_yr_site,
coral_cc_yr_yrxcc, coral_cc_site_sitexcc),
modnames = cc_modnames_surrogate_only, digits = 4)
sponge_cc_surrogate_only <- aictab(cand.set = list(sponge_cc, sponge_cc_yr, sponge_cc_site, sponge_cc_yr_site,
sponge_cc_yr_yrxcc, sponge_cc_site_sitexcc),
modnames = cc_modnames_surrogate_only, digits = 4)
sponge_cc_surrogate_only
coral_cc_surrogate_only
r_modnames_surrogate_only <- c("r", "r_yr", "r_site", "r_yr_site",
"r_yr_yrxr", "r_site_sitexr")
fish_r_surrogate_only <- aictab(cand.set = list(fish_r, fish_r_yr, fish_r_site, fish_r_yr_site,
fish_r_yr_yrxr, fish_r_site_sitexr),
modnames = r_modnames_surrogate_only, digits = 4)
combined_r_surrogate_only <- aictab(cand.set = list(combined_r, combined_r_yr, combined_r_site, combined_r_yr_site,
combined_r_yr_yrxr, combined_r_site_sitexr),
modnames = r_modnames_surrogate_only, digits = 4)
fish_r_surrogate_only
combined_r_surrogate_only
write.table(x = coral_cc_surrogate_only, file = "coral_cc_Only_Models_With_Surrogate.csv", sep = ",", col.names = TRUE,row.names = FALSE)
write.table(x = sponge_cc_surrogate_only, file = "sponge_cc_Only_Models_With_Surrogate.csv", sep = ",", col.names = TRUE,row.names = FALSE)
write.table(x = fish_r_surrogate_only, file = "fish_r_Only_Models_With_Surrogate.csv", sep = ",", col.names = TRUE,row.names = FALSE)
write.table(x = combined_r_surrogate_only, file = "combined_r_Only_Models_With_Surrogate.csv", sep = ",", col.names = TRUE,row.names = FALSE)
str(variables)
variables$True_Year_Factor <- as.factor(x = variables$True_Year)
str(variables)
coral_test_model <- glm.nb(formula = Coral_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = variables)
coral_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
True_Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels = levels(variables$True_Year_Factor)))
coral_test <- cbind(coral_test, predict(object = coral_test_model, newdata = coral_test, type = "link", se.fit = TRUE, na.action = na.omit))
coral_test <- within(coral_test, {
Predicted_Coral_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = coral_test, aes(x = Percent_Coral_Cover, y = Predicted_Coral_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Coral Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
