# # Check that observations were made at every site for every year
# # 20 years and 8 sites = 160 observations expected
# check1 <- unique(sponge_raw_longform$Site_Year)
# # because check1 has 156 levels, almost every site was visited for all years
# # After closer inspection, 1993_crab, 2014_pelican, 2017_pelican, and 2017_bigelow are missing
#
# # Create new subset for all the times where transect length is not 30 m
#not30 <-sponge_raw[sponge_raw$Transect.Length..m. != "30", 1:7]
## Import fish datasets (see "Fish Metadata.docx" for more information)
fish_raw <- read.csv("fish.csv", header = T)
# Sometimes site names were entered using different number of spaces.
# Correct these entry mistakes by making names consistent
summary(fish_raw$site)
fish_raw$site <- revalue(fish_raw$site, c("pelican   " = "pelican"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
fish_raw$site <- as.character(fish_raw$site)
fish_raw <- fish_raw[fish_raw$site == "muskN" | fish_raw$site == "pelican" | fish_raw$site == "crab" |
fish_raw$site == "bigelow" | fish_raw$site == "monkey" | fish_raw$site == "iguana" |
fish_raw$site == "white" | fish_raw$site == "grand", ]
fish_raw$site <- as.factor(fish_raw$site)
# Only retain observations where survey == main
fish_raw$survey <- as.character(fish_raw$survey)
fish_raw <- fish_raw[fish_raw$survey == "main", ]
fish_raw$survey <- as.factor(fish_raw$survey)
# Create new column called "Site_Year" that combines the year and site as ####_Sitename
fish_raw <- transform(fish_raw, Site_Year = paste(fish_raw$year, fish_raw$site, sep = "_"))
# Create new column in all datasets called Taxa, so if dataframes are combined, I know which dataset the information came from
fish_raw$Taxa <- "Fish"
# Create a new dataframe with the number (n) of transects for each Site_Year
fish_sample_size <- tally(group_by(fish_raw, fish_raw$Site_Year))
# Rename column in sample_size_fish dataframe to use as a key to merge this information with the raw data
colnames(fish_sample_size)[colnames(fish_sample_size) == "fish_raw$Site_Year"] <- "Site_Year"
fish_raw <- merge(fish_raw, fish_sample_size, by = "Site_Year", all = T)
# Randomly select 3 transects for each Site_Year
# If there are <3 transects sampled, the number that were sampled will remain constant (using imin function created above)
fish_raw_three <- fish_raw %>% group_by(fish_raw$Site_Year) %>% sample_n(imin(3, fish_raw$n))
# Double-check: fish_sample_size should have 216 obs. (different Site_Year's), so benthic_raw_three should have 648 obs.
# Now we need to ungroup the data to avoid confusing errors later
fish_raw_three <- ungroup(fish_raw_three)
# Put fish_raw into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
fish_raw_longform <- fish_raw_three %>% gather(key = "KEY", value = "Count", popaa:kysea)
# Because the species codes end with j or a to distinguish adult and juveniles,
# Split new KEY column into species_code and age_class columns
KEY <- as.character(fish_raw_longform$KEY)
fish_split <- data.frame("Species_Code" = substr(KEY, 1, (nchar(KEY)-1)), "Age_Class" = substr(KEY, nchar(KEY), nchar(KEY)))
# Combine long-form dataset with the split columns dataframe
fish_raw_longform <- cbind(fish_raw_longform, fish_split)
# ***^This step adds extraneous 56 rows
# Only retain observations where Age_Class == adult
#***Clear Justification
fish_raw_longform$Age_Class <- as.character(fish_raw_longform$Age_Class)
fish_raw_longform <- fish_raw_longform[fish_raw_longform$Age_Class == "a", ]
fish_raw_longform$Age_Class <- as.factor(fish_raw_longform$Age_Class)
# Import fish codes to get common names
fish_codes <- read.csv("fish_codes.csv", header = T)
# Rename notes column in fish_codes dataframe to avoid confusion with other notes column
colnames(fish_codes)[colnames(fish_codes) == "notes"] <- "Fish taxonomy notes"
# Rename column in fish_codes dataframe to use as a key to merge this information with the raw data
colnames(fish_codes)[colnames(fish_codes) == "new_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_codes, by = "KEY", all = T)
# # Remove observations where Count is NA
# #***Are NA's zeroes?
# fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count),]
# Can also make Year a factor instead of an integer
fish_raw_longform$year <- as.factor(fish_raw_longform$year)
# Summary Information
str(fish_raw_longform)
summary(fish_raw_longform)
summary(fish_raw_longform$site)
summary(fish_raw_longform$year)
# ************** There are NA's throughout the dataset. This is definitely a mistake early on in the code that I need to fix.
# Aggregate groups by the site, year, speciescode then averages the counts for each of these across all transects
fish_averages <- aggregate(fish_raw_longform$Count,
by = list(fish_raw_longform$site, fish_raw_longform$year, fish_raw_longform$Species_Code),
FUN = mean)
# ***Double-check environment to make sure output makes sense: 8sites*27years*119taxgroups = 25,704 averages
# ***but this gives 24,624 averages, need to look into why this may be (probably something to do with the taxgroups)
#***change column headers to match the data in them
# Aggregate groups by the site and year then uses the function we created above to calculate richness
fish_richness <- aggregate(fish_averages$x,
by = list(fish_averages$Group.1, fish_averages$Group.2),
FUN = richness)
# Double-check environment to make sure output makes sense: 8sites*27years = 216 richness values
# Rename columns to match the data in them
names(fish_richness) <- c("Site", "Year", "Fish_Richness")
# Data checking for fishes
# # Failed attempts at reformatting data to wide form
# #***Error because spread function doesn't work with duplicate row identifiers***
# # Reduce number of columns to convert to wide form
# fish_raw_longform_reduced <- fish_raw_longform[,c("notes","year", "month", "day", "site", "transect",
#                                                   "fixed_transect", "Count", "Species_Code", "Family",
#                                                   "common.name", "Fish taxonomy notes", "Site_Year", "Taxa")]
# # Keep only the columns that I need to convert to wide form
# fish_raw_longform_minimum <- fish_raw_longform_reduced[,c("notes", "year", "month", "day", "site", "transect",
#                                                           "fixed_transect", "Count", "Species_Code")]
# # Try using melt
# fish_raw_wideform_melt <- melt(fish_raw_longform_minimum, id.vars = fish_raw_longform_minimum$Species_Code, measure.vars = fish_raw_longform_minimum$Count,
#      variable.name = "variable")
# # Convert to wide form
# fish_raw_wideform <- spread(fish_raw_longform_reduced, Species_Code, Count)
# fish_raw_wideform_min <- spread(fish_raw_longform_minimum, Species_Code, Count)
# # Note that there are 2 times more observations now than in the original raw wide format -
# summary(fish_raw$site)
# summary(fish_raw_wideform$site)
# # this is because A/J are in different rows, not listed in different columns
# # Check that observations were made at every site for every year
# # 25 years and 8 sites = 200 observations expected
# check2 <- unique(fish_raw_longform_reduced$Site_Year)
# # because check2 has 200 levels, every site was visited for all 25 years
#
# # ***Add transect length from sponge dataset to the corresponding observations in the fish dataset?***
# summary(fish_raw_longform_reduced$transect)
# summary(sponge_raw_longform$Transect)
# # Because the levels are not the same, this may be difficult
#
# # Check that all of the counts are integers
# sum(sponge_raw_longform$Count)
# sum(fish_raw_longform_reduced$Count)
# # ***There is definitely a more efficient way to do this***
# # Because the sum of fish counts has a decimal, create a subset of non-zero counts to ID the culprit
# fish_nozero <- fish_raw_longform_reduced[fish_raw_longform_reduced$Count != "0", ]
# # Looks like there are some 1.5's and 1.875's, so create a subset that removes these observations to
# # determine if there are other non-integer values for Count
# fish_integertest <- fish_nozero[fish_nozero$Count == 1 | fish_nozero$Count >= 2, ]
# # Now try again,
# sum(fish_integertest$Count)
# # From a closer look at the data: 1.5, 1.875, 3.75, 4.5, 7.5, 10.5, 16.5, 19.5, 22.5, 28.5, 31.5, 37.5, and 49.5
# # are identified as non-integers, but there may be more.
#
# # Check that for each Site_Year there are 3 transects
# sponge_num_transects <- as.data.frame(table(sponge_raw$Site_Year), responseName="num_transects")
# fish_num_transects <- as.data.frame(table(fish_raw$Site_Year), responseName="num_transects")
# # Create subsets that only include Site_Year's with more than 3 transects
# sponge_num_transects <- sponge_num_transects[sponge_num_transects$num_transects > 3, ]
# fish_num_transects <- fish_num_transects[fish_num_transects$num_transects > 3, ]
#
# # ***Check that the transects within a given site-year are not repeated***
## Import rugosity dataset
rugosity_raw <- read.csv("Reef rugosity site x year means 2019.csv", header = T)
# Rename columns to match the format for other dataframes
names(rugosity_raw) <- c("Site", "Year", "Rugosity")
# Summarizing these variables for use in models into one table
# Year
# Site
# coral_percentcover
# coral_richness
# sponge_richness
# fish_richness
# Create new column called "Site_Year" for each of these dataframes that combines the year and site as ####_Sitename
coral_percentcover <- transform(coral_percentcover, Site_Year = paste(coral_percentcover$Year, coral_percentcover$Site, sep = "_"))
rugosity <- transform(rugosity_raw, Site_Year = paste(rugosity_raw$Year, rugosity_raw$Site, sep = "_"))
coral_richness <- transform(coral_richness, Site_Year = paste(coral_richness$Year, coral_richness$Site, sep = "_"))
sponge_richness <- transform(sponge_richness, Site_Year = paste(sponge_richness$Year, sponge_richness$Site, sep = "_"))
fish_richness <- transform(fish_richness, Site_Year = paste(fish_richness$Year, fish_richness$Site, sep = "_"))
# Merge the dataframes into one table
parameters <- merge(coral_percentcover, rugosity, by = "Site_Year", all = T)
parameters <- merge(parameters, coral_richness, by = "Site_Year", all = T)
parameters <- merge(parameters, sponge_richness, by = "Site_Year", all = T)
parameters <- merge(parameters, fish_richness, by = "Site_Year", all = T)
parameters <- parameters[,c("Site_Year","Percent_Coral_Cover", "Rugosity", "Coral_Richness", "Sponge_Richness", "Fish_Richness")]
# ***Add a column called Combined_Richness that adds the richness of corals, sponges, and fishes
# However, the combined richness will only be calculated for the Site_Year combinations where
# richness values are present for all 3 groups.
# Subset parameters data to only Site_Year and richnesses
combined_richness <- parameters[,c("Site_Year", "Coral_Richness", "Sponge_Richness", "Fish_Richness")]
# Check for complete cases and remove any rows with missing data
combined_richness <- combined_richness[complete.cases(combined_richness), ]
# Create new column called Combined_Richness with the sum of coral, sponge, and fish richness
combined_richness$Combined_Richness <- combined_richness$Coral_Richness + combined_richness$Sponge_Richness + combined_richness$Fish_Richness
# Remove richness columns except combined
combined_richness <- combined_richness[,c("Site_Year", "Combined_Richness")]
# Merge combined_richness with the parameters dataframe
parameters <- merge(parameters, combined_richness, by = "Site_Year", all = T)
# Split Site_Year column into separate Year and Site columns
parameters$Site_Year <- as.character(parameters$Site_Year)
parameters <- separate(parameters, Site_Year, into = c("Year", "Site"), sep="_")
# Save this parameter table as a .csv
#write.table(parameters, file="parameters.csv", sep=",", col.names=TRUE,row.names=FALSE)
# Make plots for x = time
ggplot(parameters, aes(x = Year, y = Coral_Richness, group = Site, color = Site)) +
# To show points
# geom_point() +
geom_line(size = 1.1) +
scale_x_discrete(name ="Time (year)") +
scale_y_continuous(name ="Coral Richness")
#To view each of the lines separately by groups
#  facet_wrap(~ Site)
ggplot(parameters, aes(x = Year, y = Sponge_Richness, group = Site, color = Site)) +
geom_line(size = 1.1) +
scale_x_discrete(name ="Time (year)") +
scale_y_continuous(name ="Sponge Richness")
# ***Notice that this figure has line breaks where the value for Sponge Richness in that given year is NA
# # The following code will remove the line breaks by deleting the years without values and merging the line segments
# ggplot(parameters[!is.na(parameters$Sponge_Richness),], aes(x = Year, y = Sponge_Richness, group = Site, color = Site)) +
#   geom_line(size = 1.1) +
#   scale_x_discrete(name ="Time (year)") +
#   scale_y_continuous(name ="Sponge Richness")
ggplot(parameters, aes(x = Year, y = Fish_Richness, group = Site, color = Site)) +
geom_line(size = 1.1) +
scale_x_discrete(name ="Time (year)") +
scale_y_continuous(name ="Fish Richness")
ggplot(parameters, aes(x = Year, y = Combined_Richness, group = Site, color = Site)) +
geom_line(size = 1.1) +
scale_x_discrete(name ="Time (year)") +
scale_y_continuous(name ="Combined Richness")
# Change year to numeric to allow for color gradient
parameters$Year <- as.numeric(parameters$Year)
# Make plots for x = % cover
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Sponge Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Fish_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Fish Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Combined_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Combined Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
# Make plots for x = rugosity
ggplot(parameters, aes(x = Rugosity, y = Coral_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Rugosity") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Rugosity, y = Sponge_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Rugosity") +
scale_y_continuous(name ="Sponge Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Rugosity, y = Fish_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Rugosity") +
scale_y_continuous(name ="Fish Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Rugosity, y = Combined_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Rugosity") +
scale_y_continuous(name ="Combined Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
# Make plots for x = coral richness
ggplot(parameters, aes(x = Coral_Richness, y = Sponge_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Richness") +
scale_y_continuous(name ="Sponge Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Coral_Richness, y = Fish_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Richness") +
scale_y_continuous(name ="Fish Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Coral_Richness, y = Combined_Richness)) +
geom_line(size = 1.1) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Richness") +
scale_y_continuous(name ="Combined Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year)) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
## Load packages
library(tidyverse)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year)) +
geom_text(aes(label = Year, color=Year), hjust = 0, vjust = 0) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year, size = 1.1)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year, size = 1)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year, size = 0.5)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year, size = 0.1)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year, size = 0.001)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year, size = 0.001)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year, size = 0.5)) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year), size = 6) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year), size = 0.2) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year), size = 0.9) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year), size = 1.5) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year), size = 2) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year), size = 2.5) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
## Make plots for x = % cover
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Coral_Richness)) +
geom_line(size = 0.8) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Sponge Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Fish_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Fish Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Percent_Coral_Cover, y = Combined_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Coral Cover (%)") +
scale_y_continuous(name ="Combined Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
# Make plots for x = rugosity
ggplot(parameters, aes(x = Rugosity, y = Coral_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Rugosity") +
scale_y_continuous(name ="Coral Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Rugosity, y = Sponge_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Rugosity") +
scale_y_continuous(name ="Sponge Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Rugosity, y = Fish_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Rugosity") +
scale_y_continuous(name ="Fish Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Rugosity, y = Combined_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Rugosity") +
scale_y_continuous(name ="Combined Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
# Make plots for x = coral richness
ggplot(parameters, aes(x = Coral_Richness, y = Sponge_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Coral Richness") +
scale_y_continuous(name ="Sponge Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Coral_Richness, y = Fish_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Coral Richness") +
scale_y_continuous(name ="Fish Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
ggplot(parameters, aes(x = Coral_Richness, y = Combined_Richness)) +
geom_line(size = 1.1) +
geom_point(aes(color = Year), size = 2.8) +
scale_x_continuous(name ="Coral Richness") +
scale_y_continuous(name ="Combined Richness") +
scale_color_gradient(low="lightblue", high="darkblue") +
facet_wrap(~ Site)
