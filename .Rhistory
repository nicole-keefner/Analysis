#                               labs(x = "Rugosity - Pelican Ghut", y = "Predicted Combined Richness") +
#                               scale_x_continuous(limits = c(10, 80)) +
#                               scale_y_continuous(limits = c(30, 80)) +
#                               theme(text = element_text(size = 18),
#                                     panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#                                     panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#                                     panel.background = element_blank(),
#                                     axis.line = element_line(colour = "black")
#                                     #legend.position = "none"
#                                     )
# # Grand_Ghut
# combined_predictions_2d <- data.frame(
#   Rugosity = rep(seq(from = min(Grand_Ghut$Rugosity), to = max(Grand_Ghut$Rugosity), length.out = 100), 21),
#   Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels =
#                          levels(Grand_Ghut$Year_Factor)))
# combined_predictions_2d <- cbind(combined_predictions_2d, predict(object = combined_r_yr_asfactor, newdata = combined_predictions_2d, type = "link", se.fit = TRUE))
# combined_predictions_2d <- within(combined_predictions_2d, {
#   Predicted_Combined_Richness <- exp(fit)
#   LL <- exp(fit - 1.96 * se.fit)
#   UL <- exp(fit + 1.96 * se.fit)
# })
# # Plot for Grand_Ghut
# Grand_Ghut_combined_2d <- ggplot(data = combined_predictions_2d, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Year_Factor)) +
#                             geom_ribbon(aes(ymin = LL, ymax = UL, fill = Year_Factor), alpha = 0.25) +
#                             geom_line(aes(color = Year_Factor), size = 2) +
#                             labs(x = "Rugosity - Grand Ghut", y = "Predicted Combined Richness") +
#                             scale_x_continuous(limits = c(10, 80)) +
#                             scale_y_continuous(limits = c(30, 80)) +
#                             theme(text = element_text(size = 18),
#                                   panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#                                   panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#                                   panel.background = element_blank(),
#                                   axis.line = element_line(colour = "black")
#                                   #legend.position = "none"
#                                   )
# # Crab_Cove
# combined_predictions_2d <- data.frame(
#   Rugosity = rep(seq(from = min(Crab_Cove$Rugosity), to = max(Crab_Cove$Rugosity), length.out = 100), 21),
#   Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels =
#                          levels(Crab_Cove$Year_Factor)))
# combined_predictions_2d <- cbind(combined_predictions_2d, predict(object = combined_r_yr_asfactor, newdata = combined_predictions_2d, type = "link", se.fit = TRUE))
# combined_predictions_2d <- within(combined_predictions_2d, {
#   Predicted_Combined_Richness <- exp(fit)
#   LL <- exp(fit - 1.96 * se.fit)
#   UL <- exp(fit + 1.96 * se.fit)
# })
# # Plot for Crab_Cove
# Crab_Cove_combined_2d <- ggplot(data = combined_predictions_2d, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Year_Factor)) +
#                             geom_ribbon(aes(ymin = LL, ymax = UL, fill = Year_Factor), alpha = 0.25) +
#                             geom_line(aes(color = Year_Factor), size = 2) +
#                             labs(x = "Rugosity - Crab Cove", y = "Predicted Combined Richness") +
#                             scale_x_continuous(limits = c(10, 80)) +
#                             scale_y_continuous(limits = c(30, 80)) +
#                             theme(text = element_text(size = 18),
#                                   panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#                                   panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#                                   panel.background = element_blank(),
#                                   axis.line = element_line(colour = "black")
#                                   #legend.position = "none"
#                                   )
# # Muskmelon
# combined_predictions_2d <- data.frame(
#   Rugosity = rep(seq(from = min(Muskmelon$Rugosity), to = max(Muskmelon$Rugosity), length.out = 100), 21),
#   Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels =
#                          levels(Muskmelon$Year_Factor)))
# combined_predictions_2d <- cbind(combined_predictions_2d, predict(object = combined_r_yr_asfactor, newdata = combined_predictions_2d, type = "link", se.fit = TRUE))
# combined_predictions_2d <- within(combined_predictions_2d, {
#   Predicted_Combined_Richness <- exp(fit)
#   LL <- exp(fit - 1.96 * se.fit)
#   UL <- exp(fit + 1.96 * se.fit)
# })
# # Plot for Muskmelon
# Muskmelon_combined_2d <- ggplot(data = combined_predictions_2d, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Year_Factor)) +
#                             geom_ribbon(aes(ymin = LL, ymax = UL, fill = Year_Factor), alpha = 0.25) +
#                             geom_line(aes(color = Year_Factor), size = 2) +
#                             labs(x = "Rugosity - Muskmelon", y = "Predicted Combined Richness") +
#                             scale_x_continuous(limits = c(10, 80)) +
#                             scale_y_continuous(limits = c(30, 80)) +
#                             theme(text = element_text(size = 18),
#                                   panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#                                   panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#                                   panel.background = element_blank(),
#                                   axis.line = element_line(colour = "black")
#                                   #legend.position = "none"
#                                   )
# # Bigelow
# combined_predictions_2d <- data.frame(
#   Rugosity = rep(seq(from = min(Bigelow$Rugosity), to = max(Bigelow$Rugosity), length.out = 100), 21),
#   Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels =
#                          levels(Bigelow$Year_Factor)))
# combined_predictions_2d <- cbind(combined_predictions_2d, predict(object = combined_r_yr_asfactor, newdata = combined_predictions_2d, type = "link", se.fit = TRUE))
# combined_predictions_2d <- within(combined_predictions_2d, {
#   Predicted_Combined_Richness <- exp(fit)
#   LL <- exp(fit - 1.96 * se.fit)
#   UL <- exp(fit + 1.96 * se.fit)
# })
# # Plot for Bigelow
# Bigelow_combined_2d <- ggplot(data = combined_predictions_2d, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Year_Factor)) +
#                           geom_ribbon(aes(ymin = LL, ymax = UL, fill = Year_Factor), alpha = 0.25) +
#                           geom_line(aes(color = Year_Factor), size = 2) +
#                           labs(x = "Rugosity - Bigelow", y = "Predicted Combined Richness") +
#                           scale_x_continuous(limits = c(10, 80)) +
#                           scale_y_continuous(limits = c(30, 80)) +
#                           theme(text = element_text(size = 18),
#                                 panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#                                 panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#                                 panel.background = element_blank(),
#                                 axis.line = element_line(colour = "black")
#                                 #legend.position = "none"
#                                 )
# # White_Bay
# combined_predictions_2d <- data.frame(
#   Rugosity = rep(seq(from = min(White_Bay$Rugosity), to = max(White_Bay$Rugosity), length.out = 100), 21),
#   Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels =
#                          levels(White_Bay$Year_Factor)))
# combined_predictions_2d <- cbind(combined_predictions_2d, predict(object = combined_r_yr_asfactor, newdata = combined_predictions_2d, type = "link", se.fit = TRUE))
# combined_predictions_2d <- within(combined_predictions_2d, {
#   Predicted_Combined_Richness <- exp(fit)
#   LL <- exp(fit - 1.96 * se.fit)
#   UL <- exp(fit + 1.96 * se.fit)
# })
# # Plot for White_Bay
# White_Bay_combined_2d <- ggplot(data = combined_predictions_2d, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Year_Factor)) +
#                             geom_ribbon(aes(ymin = LL, ymax = UL, fill = Year_Factor), alpha = 0.25) +
#                             geom_line(aes(color = Year_Factor), size = 2) +
#                             labs(x = "Rugosity - White Bay", y = "Predicted Combined Richness") +
#                             scale_x_continuous(limits = c(10, 80)) +
#                             scale_y_continuous(limits = c(30, 80)) +
#                             theme(text = element_text(size = 18),
#                                   panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#                                   panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#                                   panel.background = element_blank(),
#                                   axis.line = element_line(colour = "black")
#                                   #legend.position = "none"
#                                   )
# # Monkey_Point
# combined_predictions_2d <- data.frame(
#   Rugosity = rep(seq(from = min(Monkey_Point$Rugosity), to = max(Monkey_Point$Rugosity), length.out = 100), 21),
#   Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels =
#                          levels(Monkey_Point$Year_Factor)))
# combined_predictions_2d <- cbind(combined_predictions_2d, predict(object = combined_r_yr_asfactor, newdata = combined_predictions_2d, type = "link", se.fit = TRUE))
# combined_predictions_2d <- within(combined_predictions_2d, {
#   Predicted_Combined_Richness <- exp(fit)
#   LL <- exp(fit - 1.96 * se.fit)
#   UL <- exp(fit + 1.96 * se.fit)
# })
# # Plot for Monkey_Point
# Monkey_Point_combined_2d <- ggplot(data = combined_predictions_2d, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Year_Factor)) +
#                               geom_ribbon(aes(ymin = LL, ymax = UL, fill = Year_Factor), alpha = 0.25) +
#                               geom_line(aes(color = Year_Factor), size = 2) +
#                               labs(x = "Rugosity - Monkey Point", y = "Predicted Combined Richness") +
#                               scale_x_continuous(limits = c(10, 80)) +
#                               scale_y_continuous(limits = c(30, 80)) +
#                               theme(text = element_text(size = 18),
#                                     panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#                                     panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#                                     panel.background = element_blank(),
#                                     axis.line = element_line(colour = "black")
#                                     #legend.position = "none"
#                                     )
# # Guana_Head
# combined_predictions_2d <- data.frame(
#   Rugosity = rep(seq(from = min(Guana_Head$Rugosity), to = max(Guana_Head$Rugosity), length.out = 100), 21),
#   Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels =
#                          levels(Guana_Head$Year_Factor)))
# combined_predictions_2d <- cbind(combined_predictions_2d, predict(object = combined_r_yr_asfactor, newdata = combined_predictions_2d, type = "link", se.fit = TRUE))
# combined_predictions_2d <- within(combined_predictions_2d, {
#   Predicted_Combined_Richness <- exp(fit)
#   LL <- exp(fit - 1.96 * se.fit)
#   UL <- exp(fit + 1.96 * se.fit)
# })
# # Plot for Guana_Head
# Guana_Head_combined_2d <- ggplot(data = combined_predictions_2d, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Year_Factor)) +
#                             geom_ribbon(aes(ymin = LL, ymax = UL, fill = Year_Factor), alpha = 0.25) +
#                             geom_line(aes(color = Year_Factor), size = 2) +
#                             labs(x = "Rugosity - Guana Head", y = "Predicted Combined Richness") +
#                             scale_x_continuous(limits = c(10, 80)) +
#                             scale_y_continuous(limits = c(30, 80)) +
#                             theme(text = element_text(size = 18),
#                                   panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#                                   panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#                                   panel.background = element_blank(),
#                                   axis.line = element_line(colour = "black"))
#
# # Organize all of these figures into one window
# grid.arrange(Pelican_Ghut_combined_2d, Grand_Ghut_combined_2d, Crab_Cove_combined_2d,
#              Muskmelon_combined_2d, Bigelow_combined_2d, White_Bay_combined_2d,
#              Monkey_Point_combined_2d, Guana_Head_combined_2d, ncol = 3, nrow = 3)
sponge_complete <- variables[complete.cases(variables$Sponge_Richness), ]
sponge_complete$Year_Factor <- as.factor(sponge_complete$Year)
sponge_complete$Year_Factor <- factor(x = sponge_complete$Year_Factor, levels = c("1", "2", "3", "8", "9", "10", "11", "13", "14",
"15", "16", "17", "18", "19", "20", "21", "22",
"23", "24", "25", "26"), ordered = TRUE)
combined_complete <- variables[complete.cases(variables$Combined_Richness), ]
## Figures of competitive models (<2.0 deltaAIC)
# The most parsimonious model for sponge richness is sponge_yr_site.
# The function of this model is Sponge_Richness ~ Year + Site.
# Create new dataframe of predicted values from this model
sponge_predictions <- data.frame(
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions <- cbind(sponge_predictions, predict(object = sponge_yr_site, newdata = sponge_predictions, type = "link", se.fit = TRUE))
sponge_predictions <- within(sponge_predictions, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure 35. Predicted relationship between time and sponge richness by site. Negative binomial distribution used.
ggplot(data = sponge_predictions, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_color_manual(values = cb_palette) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# Subset predictions by site
sponge_predictions$Site <- as.character(sponge_predictions$Site)
sponge_predictions_oneoftwo <- sponge_predictions[sponge_predictions$Site == "pelican" |
sponge_predictions$Site == "white" |
sponge_predictions$Site == "crab" |
sponge_predictions$Site == "bigelow", ]
sponge_predictions_twooftwo <- sponge_predictions[sponge_predictions$Site == "monkey" |
sponge_predictions$Site == "iguana" |
sponge_predictions$Site == "grand" |
sponge_predictions$Site == "muskN", ]
sponge_predictions_oneoftwo$Site <- as.factor(sponge_predictions_oneoftwo$Site)
sponge_predictions_twooftwo$Site <- as.factor(sponge_predictions_twooftwo$Site)
sponge_predictions$Site <- as.factor(sponge_predictions$Site)
#Same as figure 34, but with 4 sites each
predicted_sponge_yr_site_A <- ggplot(data = sponge_predictions_oneoftwo, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_y_continuous(limits = c(10, 35)) +
scale_color_manual(values = cb_palette[1:4]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
predicted_sponge_yr_site_B <- ggplot(data = sponge_predictions_twooftwo, aes(x = Year, y = Predicted_Sponge_Richness)) +
geom_ribbon(aes(ymin = LL, ymax = UL, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
labs(x = "Time (Year)", y = "Predicted Sponge Richness") +
scale_y_continuous(limits = c(10, 35)) +
scale_color_manual(values = cb_palette[5:8]) +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
grid.arrange(predicted_sponge_yr_site_A, predicted_sponge_yr_site_B, ncol = 2, nrow = 1)
# # Figure 36. Relationship between time and sponge richness by site. Negative binomial distribution used.
# ggplot(data = variables, aes(x = Year, y = Sponge_Richness)) +
#   geom_point(size = 3)+
#   scale_x_continuous(name = "Time (Year)") +
#   scale_y_continuous(name = "Sponge Richness") +
#   geom_smooth(size = 1.2, method = "glm.nb", formula = y ~ x, aes(color = Site)) +
#   scale_color_manual(values = cb_palette) +
#   theme(text = element_text(size=27),
#         panel.grid.major = element_line(colour = "light gray", size = (0.5)),
#         panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
#         panel.background = element_blank(),
#         axis.line = element_line(colour = "black"))
# THIS IS THE CODE THAT WORKS TO CREATE A FIGURE OF CORAL COVER VS SPONGE RICHNESS WITH YEAR PREDICTION LINES AND TRUE POINTS WITH A COLOR GRADIENT
sponge_complete$True_Year_Factor <- as.character(sponge_complete$True_Year_Factor)
sponge_complete <- sponge_complete[sponge_complete$True_Year_Factor != "1992" | sponge_complete$True_Year_Factor != "1995" | sponge_complete$True_Year_Factor != "1996" |
sponge_complete$True_Year_Factor != "1997" | sponge_complete$True_Year_Factor != "1998" | sponge_complete$True_Year_Factor != "2003", ]
sponge_complete$True_Year_Factor <- as.factor(sponge_complete$True_Year_Factor)
stest_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + True_Year_Factor, data = sponge_complete)
stest <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$True_Year_Factor)))
stest <- cbind(stest, predict(object = stest_model, newdata = stest, type = "link", se.fit = TRUE, na.action = na.omit))
# 95% confidence intervals
stest <- within(stest, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by year***
ggplot(data = stest, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = sponge_complete, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
###END OF CODE FOR THIS FIGURE
# Note that I created a new model for the sake of creating this figure
sponge_cc_site_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Site, data = sponge_complete)
sponge_cc_site_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(sponge_complete$Site)))
sponge_cc_site_fig <- cbind(sponge_cc_site_fig, predict(object = sponge_cc_site_fig_model, newdata = sponge_cc_site_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_site_fig <- within(sponge_cc_site_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by site***
ggplot(data = sponge_cc_site_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Site)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Site") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
## Figures of competitive models (<2.0 deltaAIC)
# The most parsimonious model for combined richness is combined_cc_yr_site.
# The function of this model is Combined_Richness ~ Percent_Coral_Cover + Year + Site.
# # These figures are for 3D, but they won't be used.
# # Figure 39. Relationship between coral cover and coral richness and time and site. Negative binomial distribution used.
# # Note that the model used to predict does not have site as a term***
# par(mfrow = c(3,3))
# Year <- seq(from = min(Pelican_Ghut$Year), to = max(Pelican_Ghut$Year), length.out = 100)
# Rugosity <- seq(from = min(Pelican_Ghut$Rugosity), to = max(Pelican_Ghut$Rugosity), length.out = 100)
# pred_grid <- expand.grid(Year = Year, Rugosity = Rugosity)
# pred_grid$Predicted_Combined_Richness <-predict(object = combined_r_yr, newdata = pred_grid, type = "response")
# predicted_combined_plot <- scatterplot3d(x = pred_grid$Year, y = pred_grid$Rugosity, z = pred_grid$Predicted_Combined_Richness,
#                                          angle = 60,
#                                          color = cb_palette[1],
#                                          pch = 1,
#                                          xlab = "Time (Year) - Pelican Ghut",
#                                          ylab = "Rugosity",
#                                          zlab = "Combined Richness",
#                                          xlim = c(0, 30),
#                                          ylim = c(10, 80),
#                                          zlim = c(30, 80))
# Year <- seq(from = min(Grand_Ghut$Year), to = max(Grand_Ghut$Year), length.out = 100)
# Rugosity <- seq(from = min(Grand_Ghut$Rugosity), to = max(Grand_Ghut$Rugosity), length.out = 100)
# pred_grid <- expand.grid(Year = Year, Rugosity = Rugosity)
# pred_grid$Predicted_Combined_Richness <-predict(object = combined_r_yr, newdata = pred_grid, type = "response")
# predicted_combined_plot <- scatterplot3d(x = pred_grid$Year, y = pred_grid$Rugosity, z = pred_grid$Predicted_Combined_Richness,
#                                          angle = 60,
#                                          color = cb_palette[2],
#                                          pch = 1,
#                                          xlab = "Time (Year) - Grand Ghut",
#                                          ylab = "Rugosity",
#                                          zlab = "Combined Richness",
#                                          xlim = c(0, 30),
#                                          ylim = c(10, 80),
#                                          zlim = c(30, 80))
# Yeartest <- seq(from = min(Crab_Cove$Year), to = max(Crab_Cove$Year), length.out = 100)
# Rugosity <- seq(from = min(Crab_Cove$Rugosity), to = max(Crab_Cove$Rugosity), length.out = 100)
# pred_grid <- expand.grid(Year = Year, Rugosity = Rugosity)
# pred_grid$Predicted_Combined_Richness <-predict(object = combined_r_yr, newdata = pred_grid, type = "response")
# predicted_combined_plot <- scatterplot3d(x = pred_grid$Year, y = pred_grid$Rugosity, z = pred_grid$Predicted_Combined_Richness,
#                                          angle = 60,
#                                          color = cb_palette[3],
#                                          pch = 1,
#                                          xlab = "Time (Year) - Crab Cove",
#                                          ylab = "Rugosity",
#                                          zlab = "Combined Richness",
#                                          xlim = c(0, 30),
#                                          ylim = c(10, 80),
#                                          zlim = c(30, 80))
# Year <- seq(from = min(Muskmelon$Year), to = max(Muskmelon$Year), length.out = 100)
# Rugosity <- seq(from = min(Muskmelon$Rugosity), to = max(Muskmelon$Rugosity), length.out = 100)
# pred_grid <- expand.grid(Year = Year, Rugosity = Rugosity)
# pred_grid$Predicted_Combined_Richness <-predict(object = combined_r_yr, newdata = pred_grid, type = "response")
# predicted_combined_plot <- scatterplot3d(x = pred_grid$Year, y = pred_grid$Rugosity, z = pred_grid$Predicted_Combined_Richness,
#                                          angle = 60,
#                                          color = cb_palette[4],
#                                          pch = 1,
#                                          xlab = "Time (Year) - Muskmelon",
#                                          ylab = "Rugosity",
#                                          zlab = "Combined Richness",
#                                          xlim = c(0, 30),
#                                          ylim = c(10, 80),
#                                          zlim = c(30, 80))
# Year <- seq(from = min(Bigelow$Year), to = max(Bigelow$Year), length.out = 100)
# Rugosity <- seq(from = min(Bigelow$Rugosity), to = max(Bigelow$Rugosity), length.out = 100)
# pred_grid <- expand.grid(Year = Year, Rugosity = Rugosity)
# pred_grid$Predicted_Combined_Richness <-predict(object = combined_r_yr, newdata = pred_grid, type = "response")
# predicted_combined_plot <- scatterplot3d(x = pred_grid$Year, y = pred_grid$Rugosity, z = pred_grid$Predicted_Combined_Richness,
#                                          angle = 60,
#                                          color = cb_palette[5],
#                                          pch = 1,
#                                          xlab = "Time (Year) - Bigelow",
#                                          ylab = "Rugosity",
#                                          zlab = "Combined Richness",
#                                          xlim = c(0, 30),
#                                          ylim = c(10, 80),
#                                          zlim = c(30, 80))
# Year <- seq(from = min(White_Bay$Year), to = max(White_Bay$Year), length.out = 100)
# Rugosity <- seq(from = min(White_Bay$Rugosity), to = max(White_Bay$Rugosity), length.out = 100)
# pred_grid <- expand.grid(Year = Year, Rugosity = Rugosity)
# pred_grid$Predicted_Combined_Richness <-predict(object = combined_r_yr, newdata = pred_grid, type = "response")
# predicted_combined_plot <- scatterplot3d(x = pred_grid$Year, y = pred_grid$Rugosity, z = pred_grid$Predicted_Combined_Richness,
#                                          angle = 60,
#                                          color = cb_palette[6],
#                                          pch = 1,
#                                          xlab = "Time (Year) - White Bay",
#                                          ylab = "Rugosity",
#                                          zlab = "Combined Richness",
#                                          xlim = c(0, 30),
#                                          ylim = c(10, 80),
#                                          zlim = c(30, 80))
# Year <- seq(from = min(Monkey_Point$Year), to = max(Monkey_Point$Year), length.out = 100)
# Rugosity <- seq(from = min(Monkey_Point$Rugosity), to = max(Monkey_Point$Rugosity), length.out = 100)
# pred_grid <- expand.grid(Year = Year, Rugosity = Rugosity)
# pred_grid$Predicted_Combined_Richness <-predict(object = combined_r_yr, newdata = pred_grid, type = "response")
# predicted_combined_plot <- scatterplot3d(x = pred_grid$Year, y = pred_grid$Rugosity, z = pred_grid$Predicted_Combined_Richness,
#                                          angle = 60,
#                                          color = cb_palette[7],
#                                          pch = 1,
#                                          xlab = "Time (Year) - Monkey Point",
#                                          ylab = "Rugosity",
#                                          zlab = "Combined Richness",
#                                          xlim = c(0, 30),
#                                          ylim = c(10, 80),
#                                          zlim = c(30, 80))
# Year <- seq(from = min(Guana_Head$Year), to = max(Guana_Head$Year), length.out = 100)
# Rugosity <- seq(from = min(Guana_Head$Rugosity), to = max(Guana_Head$Rugosity), length.out = 100)
# pred_grid <- expand.grid(Year = Year, Rugosity = Rugosity)
# pred_grid$Predicted_Combined_Richness <-predict(object = combined_r_yr, newdata = pred_grid, type = "response")
# predicted_combined_plot <- scatterplot3d(x = pred_grid$Year, y = pred_grid$Rugosity, z = pred_grid$Predicted_Combined_Richness,
#                                          angle = 60,
#                                          color = cb_palette[8],
#                                          pch = 1,
#                                          xlab = "Time (Year) - Guana Head",
#                                          ylab = "Rugosity",
#                                          zlab = "Combined Richness",
#                                          xlim = c(0, 30),
#                                          ylim = c(10, 80),
#                                          zlim = c(30, 80))
# par(mfrow = c(1,1))
# THIS IS THE CODE THAT WORKS TO CREATE A FIGURE OF RUGOSITY VS COMBINED RICHNESS WITH YEAR PREDICTION LINES AND TRUE POINTS WITH A COLOR GRADIENT
combined_complete$True_Year_Factor <- as.character(combined_complete$True_Year_Factor)
combined_complete <- combined_complete[combined_complete$True_Year_Factor != "1992" | combined_complete$True_Year_Factor != "1995" | combined_complete$True_Year_Factor != "1996" |
combined_complete$True_Year_Factor != "1997" | combined_complete$True_Year_Factor != "1998" | combined_complete$True_Year_Factor != "2003", ]
combined_complete$True_Year_Factor <- as.factor(combined_complete$True_Year_Factor)
ctest_model <- glm.nb(formula = Combined_Richness ~ Rugosity + True_Year_Factor, data = sponge_complete)
ctest <- data.frame(
Rugosity = rep(seq(from = min(combined_complete$Rugosity), to = max(combined_complete$Rugosity), length.out = 100), 21),
True_Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(combined_complete$True_Year_Factor)))
ctest <- cbind(ctest, predict(object = ctest_model, newdata = ctest, type = "link", se.fit = TRUE, na.action = na.omit))
# 95% confidence intervals
ctest <- within(ctest, {
Predicted_Combined_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by year
ggplot(data = ctest, aes(x = Rugosity, y = Predicted_Combined_Richness, color = True_Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = True_Year_Factor), size = 2) +
geom_point(data = combined_complete, size = 3, aes(x = Rugosity, y = Combined_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
## Order numbers in legend, but can't use viridis
#scale_colour_discrete(c("1", "2", "3", "8", "9", "10", "11", "13", "14", "15",
#                       "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26")) +
scale_colour_viridis_d() +
labs(x = "Rugosity", y = "Combined Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
###END OF CODE FOR THIS FIGURE
# Note that I created a new model for the sake of creating this figure
combined_r_site_fig_model <- glm.nb(formula = Combined_Richness ~ Rugosity + Site, data = sponge_complete)
combined_r_site_fig <- data.frame(
Rugosity = rep(seq(from = min(sponge_complete$Rugosity), to = max(sponge_complete$Rugosity), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(sponge_complete$Site)))
combined_r_site_fig <- cbind(combined_r_site_fig, predict(object = combined_r_site_fig_model, newdata = combined_r_site_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
combined_r_site_fig <- within(combined_r_site_fig, {
Predicted_Combined_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
# Figure with prediction lines and true points colored by site
ggplot(data = combined_r_site_fig, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Site)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
geom_point(data = variables, size = 3, aes(x = Rugosity, y = Combined_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Rugosity", y = "Combined Richness", color = "Site") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
########################################################################
#######################COMBINED RICHNESS################################
