levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_site_for_figure, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_predictions_for_figure <- within(sponge_predictions_for_figure, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
View(sponge_predictions_for_figure)
sponge_cc_yr_asfactor_site <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = variables)
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels =
levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels =
levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_cc_yr_asfactor_site <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = variables)
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels =
levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = coral_cc_yr_asfactorsponge_cc_yr_asfactor_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_predictions_for_figure <- within(sponge_predictions_for_figure, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels =
levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = coral_cc_yr_asfactorsponge_cc_yr_asfactor_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_asfactor_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
summary(sponge_predictions_for_figure)
str(sponge_predictions_for_figure)
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels =
levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_asfactor_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_cc_yr_asfactor_site <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = variables)
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels =
levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_asfactor_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_predictions_for_figure <- within(sponge_predictions_for_figure, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
sponge_predictions <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_test <- cbind(sponge_predictions_test, predict(object = sponge_cc_yr_site, newdata = sponge_predictions_test, type = "link", se.fit = TRUE))
sponge_predictions_test <- within(sponge_predictions_test, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
View(sponge_predictions_test)
ggplot(data = sponge_predictions, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_predictions, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_predictions_for_figure <- within(sponge_predictions_for_figure, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = sponge_predictions_for_figure, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 800), levels = 1:27, labels =
levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 800), levels = 1:27, labels =
levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_predictions_for_figure <- within(sponge_predictions_for_figure, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
sponge_predictions_for_figure$Year <- as.factor(sponge_predictions_for_figure$Year)
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_predictions_for_figure <- within(sponge_predictions_for_figure, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
sponge_predictions_for_figure$Year <- as.factor(round(digits = 0, x = sponge_predictions_for_figure$Year))
sponge_predictions_for_figure <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year = rep(seq(from = min(variables$Year), to = max(variables$Year), length.out = 100), 8),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels =
levels(variables$Site)))
sponge_predictions_for_figure <- cbind(sponge_predictions_for_figure, predict(object = sponge_cc_yr_site, newdata = sponge_predictions_for_figure, type = "link", se.fit = TRUE))
sponge_predictions_for_figure <- within(sponge_predictions_for_figure, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
## Load packages
# # First used for model output in HTML table format using function tab_model***
# library(sjPlot)
# First used for aic function, aictab
library(AICcmodavg)
# First used to make figures using function ggplot
library(ggplot2)
# First used for negative binomial modeling using function glm.nb
library(MASS)
# First used to make 3D model using function scatterplot3d
library(scatterplot3d)
# First used to fit >1 ggplot on same window using function grid.arrange
library(gridExtra)
sponge_cc_yr_asfactor_site_test <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = variables)
sponge_predictions_2d_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels =
levels(variables$Year_Factor)))
sponge_predictions_2d_test <- cbind(sponge_predictions_2d_test, predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
type = "link", se.fit = TRUE))
sponge_cc_yr_asfactor_site_test <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = variables)
sponge_predictions_2d_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels =
levels(variables$Year_Factor)))
sponge_predictions_2d_test <- cbind(sponge_predictions_2d_test, predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
type = "link", se.fit = TRUE))
sponge_predictions_2d_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:27, each = 100), levels = 1:27, labels = levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(variables$Site)))
sponge_predictions_2d_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 216),
Year_Factor = factor(rep(1:27, each = 800), levels = 1:27, labels = levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels = levels(variables$Site)))
sponge_predictions_2d_test <- cbind(sponge_predictions_2d_test, predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
type = "link", se.fit = TRUE))
View(sponge_complete)
sponge_complete$Year_Factor <- as.factor(sponge_complete$True_Year)
summary(variables$True_Year)
str(sponge_complete$Year)
sponge_complete$Year_Factor <- as.factor(sponge_complete$Year)
str(sponge_complete$Year_Factor)
sponge_cc_yr_asfactor_site_test <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = variables)
sponge_predictions_2d_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Percent_Coral_Cover), to = max(variables$Percent_Coral_Cover), length.out = 100), 216),
Year_Factor = factor(rep(1:27, each = 800), levels = 1:27, labels = levels(variables$Year_Factor)),
Site = factor(rep(1:8, each = 2700), levels = 1:8, labels = levels(variables$Site)))
View(sponge_predictions_2d_test)
predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
type = "link", se.fit = TRUE)
sponge_predictions_2d_test <- cbind(sponge_predictions_2d_test, predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
type = "link", se.fit = TRUE, na.action = na.exclude()))
sponge_predictions_2d_test <- cbind(sponge_predictions_2d_test, predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
type = "link", se.fit = TRUE, na.action = na.omit))
summary(sponge_complete)
str(sponge_complete)
sponge_cc_yr_asfactor_site_test <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor + Site, data = sponge_complete)
sponge_predictions_2d_test <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 168),
Year_Factor = factor(rep(1:21, each = 800), levels = 1:21, labels = levels(sponge_complete$Year_Factor)),
Site = factor(rep(1:8, each = 2100), levels = 1:8, labels = levels(sponge_complete$Site)))
sponge_predictions_2d_test <- cbind(sponge_predictions_2d_test, predict(object = sponge_cc_yr_asfactor_site_test, newdata = sponge_predictions_2d_test,
type = "link", se.fit = TRUE))
sponge_predictions_2d_test <- within(sponge_predictions_2d_test, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = sponge_predictions_2d_test, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_predictions_2d_test, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_predictions_2d_test, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
#geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_predictions_2d_test, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_predictions_2d_test, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = .2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
sponge_cc_yr_asfactor_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = sponge_complete)
sponge_cc_yr_asfactor_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 168),
Year_Factor = factor(rep(1:21, each = 800), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
sponge_cc_yr_asfactor_fig <- cbind(sponge_cc_yr_asfactor_fig, predict(object = sponge_cc_yr_asfactor_fig_model, newdata = sponge_cc_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_yr_asfactor_fig <- within(sponge_cc_yr_asfactor_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
sponge_cc_yr_asfactor_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = sponge_complete)
sponge_cc_yr_asfactor_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 27),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
sponge_cc_yr_asfactor_fig <- cbind(sponge_cc_yr_asfactor_fig, predict(object = sponge_cc_yr_asfactor_fig_model, newdata = sponge_cc_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_yr_asfactor_fig <- within(sponge_cc_yr_asfactor_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
sponge_cc_yr_asfactor_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Year_Factor, data = sponge_complete)
sponge_cc_yr_asfactor_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 21),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
sponge_cc_yr_asfactor_fig <- cbind(sponge_cc_yr_asfactor_fig, predict(object = sponge_cc_yr_asfactor_fig_model, newdata = sponge_cc_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_yr_asfactor_fig <- within(sponge_cc_yr_asfactor_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = .2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data = sponge_cc_yr_asfactor_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
sponge_cc_site_fig_model <- glm.nb(formula = Sponge_Richness ~ Percent_Coral_Cover + Site, data = sponge_complete)
sponge_cc_site_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(sponge_complete$Percent_Coral_Cover), to = max(sponge_complete$Percent_Coral_Cover), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(sponge_complete$Site)))
sponge_cc_site_fig <- cbind(sponge_cc_site_fig, predict(object = sponge_cc_site_fig_model, newdata = sponge_cc_site_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
sponge_cc_site_fig <- within(sponge_cc_site_fig, {
Predicted_Sponge_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = sponge_cc_site_fig, aes(x = Percent_Coral_Cover, y = Predicted_Sponge_Richness, color = Site)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
geom_point(data = variables, size = 3, aes(x = Percent_Coral_Cover, y = Sponge_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Coral Cover (%)", y = "Sponge Richness", color = "Site") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
fish_r_site_fig_model <- glm.nb(formula = Fish_Richness ~ Rugosity + Site, data = variables)
fish_r_site_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Rugosity), to = max(variables$Rugosity), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(variables$Site)))
fish_r_site_fig <- cbind(fish_r_site_fig, predict(object = fish_r_site_fig_model, newdata = fish_r_site_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
fish_r_site_fig <- within(fish_r_site_fig, {
Predicted_Fish_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
fish_r_site_fig_model <- glm.nb(formula = Fish_Richness ~ Rugosity + Site, data = variables)
fish_r_site_fig <- data.frame(
Percent_Coral_Cover = rep(seq(from = min(variables$Rugosity), to = max(variables$Rugosity), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(variables$Site)))
fish_r_site_fig <- cbind(fish_r_site_fig, predict(object = fish_r_site_fig_model, newdata = fish_r_site_fig,
type = "link", se.fit = TRUE))
fish_r_site_fig <- data.frame(
Rugosity = rep(seq(from = min(variables$Rugosity), to = max(variables$Rugosity), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(variables$Site)))
fish_r_site_fig <- cbind(fish_r_site_fig, predict(object = fish_r_site_fig_model, newdata = fish_r_site_fig,
type = "link", se.fit = TRUE))
fish_r_site_fig <- within(fish_r_site_fig, {
Predicted_Fish_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = fish_r_site_fig, aes(x = Rugosity, y = Predicted_Fish_Richness, color = Site)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
geom_point(data = variables, size = 3, aes(x = Rugosity, y = Fish_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Rugosity", y = "Fish Richness", color = "Site") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
combined_r_yr_asfactor_fig_model <- glm.nb(formula = Combined_Richness ~ Rugosity + Year_Factor, data = sponge_complete)
combined_r_yr_asfactor_fig <- data.frame(
Rugosity = rep(seq(from = min(sponge_complete$Rugosity), to = max(sponge_complete$Rugosity), length.out = 100), 21),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
combined_r_yr_asfactor_fig <- cbind(combined_r_yr_asfactor_fig, predict(object = combined_r_yr_asfactor_fig_model, newdata = combined_r_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
combined_r_yr_asfactor_fig <- within(combined_r_yr_asfactor_fig, {
Predicted_Combined_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
combined_r_yr_asfactor_fig_model <- glm.nb(formula = Combined_Richness ~ Rugosity + Year_Factor, data = sponge_complete)
combined_r_yr_asfactor_fig <- data.frame(
Rugosity = rep(seq(from = min(sponge_complete$Rugosity), to = max(sponge_complete$Rugosity), length.out = 100), 21),
Year_Factor = factor(rep(1:21, each = 100), levels = 1:21, labels = levels(sponge_complete$Year_Factor)))
combined_r_yr_asfactor_fig <- cbind(combined_r_yr_asfactor_fig, predict(object = combined_r_yr_asfactor_fig_model, newdata = combined_r_yr_asfactor_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
combined_r_yr_asfactor_fig <- within(combined_r_yr_asfactor_fig, {
Predicted_Combined_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = combined_r_yr_asfactor_fig, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Year_Factor)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Year_Factor), alpha = 0.25) +
geom_line(aes(color = Year_Factor), size = 2) +
geom_point(data = variables, size = 3, aes(x = Rugosity, y = Combined_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Rugosity", y = "Combined Richness", color = "Year") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# Note that I created a new model for the sake of creating this figure
combined_r_site_fig_model <- glm.nb(formula = Combined_Richness ~ Rugosity + Site, data = sponge_complete)
combined_r_site_fig <- data.frame(
Rugosity = rep(seq(from = min(sponge_complete$Rugosity), to = max(sponge_complete$Rugosity), length.out = 100), 8),
Site = factor(rep(1:8, each = 100), levels = 1:8, labels = levels(sponge_complete$Site)))
combined_r_site_fig <- cbind(combined_r_site_fig, predict(object = combined_r_site_fig_model, newdata = combined_r_site_fig,
type = "link", se.fit = TRUE))
# 95% confidence intervals
combined_r_site_fig <- within(combined_r_site_fig, {
Predicted_Combined_Richness <- exp(fit)
LL <- exp(fit - 1.96 * se.fit)
UL <- exp(fit + 1.96 * se.fit)
})
ggplot(data = combined_r_site_fig, aes(x = Rugosity, y = Predicted_Combined_Richness, color = Site)) +
#geom_ribbon(aes(ymin = 0, ymax = 35, fill = Site), alpha = 0.25) +
geom_line(aes(color = Site), size = 2) +
geom_point(data = variables, size = 3, aes(x = Rugosity, y = Combined_Richness)) +
#scale_color_gradient(low="lightblue", high="darkblue") +
#scale_colour_viridis_d(option = "plasma") +
scale_colour_viridis_d() +
labs(x = "Rugosity", y = "Combined Richness", color = "Site") +
theme(text = element_text(size = 18),
panel.grid.major = element_line(colour = "light gray", size = (0.5)),
panel.grid.minor = element_line(colour = "light gray", size = (0.5)),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
